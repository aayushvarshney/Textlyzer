{"version":3,"sources":["Components/About.js","Components/Navbar.js","Components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","theme","color","mode","backgroundColor","border","useState","className","style","id","type","Navbar","to","title","role","onClick","toggleMode","htmlFor","TextForm","state","setstate","heading","placeholder","value","onChange","event","target","rows","newtext","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","filter","elem","length","App","setmode","msg","toast","success","basename","document","body","toastStyle","position","autoClose","hideProgressBar","newestOnTop","closeOnClickrtl","pauseOnFocus","Lossdraggable","pauseOnHover","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2976fbab.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n    const theme = {\r\n        color : props.mode==='dark'?'white':'black',\r\n        backgroundColor : props.mode==='dark'?'#161625':'white',\r\n        border : props.mode==='dark'?'0.5px dotted white':'0px'\r\n    };\r\n    \r\n    const [btnold, btnnew] = useState(\"Dark Mode\");\r\n\r\n    return (\r\n        <div className=\"container\" style={theme}>\r\n            <h2 className=\"py-3 mx-4\"> About Us </h2>\r\n            <div className=\"accordion py-3\" id=\"accordionExample\" >\r\n            <div className=\"accordion-item\" style={theme}>\r\n                <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" style={theme}>\r\n                    Free to Use & Ad-free\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\">\r\n                Textlyzer App is Absolutely free to use web app built on React.js.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\" style={theme}>\r\n                <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\" style={theme}>\r\n                    Utiltities to play with your text\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\">\r\n                This App currently has following utilities that you can use to manipulate your text.\r\n                Uppercase to lowercase,\r\n                Lowercase to uppercase, \r\n                Character Counter, \r\n                Word counter &\r\n                Copy Text. \r\n                More functions are being cooked under-the-hood and will be added soon.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\" style={theme}>\r\n                <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\" style={theme}>\r\n                    Safe & Cross Browser Compatible\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\">\r\n                This App is completely secured with HTTPS Protection and is compactable on all browsers available. This app do not store your data. Use without Login or SignUp hassles!\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div>\r\n\t\t\t\t<nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n\t\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t\t<Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n\t\t\t\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n\t\t\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n\t\t\t\t\t\t\t<ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n\t\t\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t\t<Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t\t<Link className=\"nav-link\" to=\"/about\">About</Link>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t<div className={`form-check form-switch text-${props.mode===\"light\"?\"dark\":\"light\"}`}>\r\n\t\t\t\t\t\t\t\t<input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}/> &nbsp;\r\n\t\t\t\t\t\t\t\t<label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</nav>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [state, setstate] = useState(\"\");\r\n    const toUpperCase = ()=> {\r\n        var newtext=state.toUpperCase();\r\n        setstate(newtext);\r\n        props.showAlert(\"Converted to Upper Case\");\r\n    }\r\n    const toLowerCase = ()=> {\r\n        var newtext=state.toLowerCase();\r\n        setstate(newtext);\r\n        props.showAlert(\"Converted to Lower Case\");\r\n    }\r\n    const handleOnChange = (event)=> {\r\n        setstate(event.target.value);\r\n    }\r\n    const copyToClipBoard = () => {\r\n        navigator.clipboard.writeText(state);\r\n        props.showAlert(\"Text copied to Clip Board\");\r\n    }\r\n    return (\r\n        <>\r\n            <div>\r\n                <h1 style={{color: props.mode===\"light\"?\"black\":\"white\"}}>{props.heading}</h1>\r\n                <div className=\"mb-3 my-4\">\r\n                    <textarea className=\"form-control txtform\" placeholder=\"Enter any text here.\" value={state} onChange={handleOnChange} id=\"exampleFormControlTextarea1\" rows=\"7.5\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-success my-2 mx-2\" onClick={toUpperCase}>Change to Uppercase</button>\r\n                <button className=\"btn btn-success mx-2\" onClick={toLowerCase}>Change to Lowercase</button>\r\n                <button className=\"btn btn-success mx-2\" data-clipboard-target=\"#myBox\" onClick={copyToClipBoard}>Copy Text</button>\r\n            </div>\r\n            <div className=\"container\">\r\n                <h4 className=\"my-2\" style={{color: props.mode===\"light\"?\"black\":\"white\"}}>  Textlyzed Results : </h4>\r\n                <p style={{color: props.mode===\"light\"?\"black\":\"white\"}} className=\"resultline\">Your text has <span className=\"results\">{state===\"\"?0:state.split(\" \").filter((elem)=>{return elem.length!==0}).length}</span> words and <span className=\"results\">{state.length-state.split(\" \").length+1}</span> characters.</p>\r\n            </div>\r\n        </>\r\n    )\r\n}","import { useState } from \"react\";\nimport \"./App.css\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport About from \"./Components/About\";\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextForm\";\nimport {\n    HashRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\n\nfunction App() {\n\tconst [mode, setmode] = useState(\"light\");\n\tconst showAlert = (msg) => toast.success(msg);\n    const toggleMode = () => {\n\t\tif (mode === \"light\") {\n            setmode(\"dark\");\n            document.body.style.backgroundColor = \"#161625\";\n\t\t\tshowAlert(\"Dark Mode ON\");\n        } else {\n\t\t\tsetmode(\"light\");\n            document.body.style.backgroundColor = \"#4A90E2\";\n\t\t\tshowAlert(\"Light Mode ON\");\n        }\n    };\n    return (\n        <>\n        <Router basename='/'>\n            <Navbar title=\"Textlyzer\" mode={mode} toggleMode={toggleMode} />\n            <ToastContainer toastStyle={{ backgroundColor: \"black\", color: \"grey\"}} position=\"bottom-right\" autoClose={2500} hideProgressBar={false} newestOnTop={false} closeOnClickrtl={false} pauseOnFocus Lossdraggable pauseOnHover/>\n            <div className=\"container my-4\">\n                <Switch>\n                    <Route exact path=\"/about\">\n                        <About mode={mode} />\n                    </Route>\n                    <Route exact path=\"/\">\n                    <TextForm showAlert={showAlert} heading=\"Enter your text below\" mode={mode} />\n                    </Route>\n                </Switch>\n            </div>\n            </Router>\n        </>\n    );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}